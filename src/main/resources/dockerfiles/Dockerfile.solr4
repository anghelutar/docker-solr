FROM	hub.xenit.eu/tomcat:7.0.69-jdk8
# ${CATALINA_HOME} = /usr/local/tomcat

ARG SOLR_VERSION_MAJOR
ARG SOLR_VERSION_MINOR
ARG SOLR_VERSION_REV
ARG SOLR_FLAVOR
ARG SECRET_ID

ENV 	SOLR_VERSION=${SOLR_VERSION_MAJOR}.${SOLR_VERSION_MINOR}.${SOLR_VERSION_REV}
ENV     GOSU_VERSION 1.9
ENV     SOLR_DIR_ROOT /opt/alfresco/solr4

# SOLR installation & configuration
USER	root
RUN     apt-get update && \
        apt-get install -y curl unzip xmlstarlet jq && \
        # Get artifactory credentials
        APPROLE_ID="0fbdaa0a-86db-d637-f8f5-19a41106fc20" && \
        token=$(curl -k --request POST --data "{\"role_id\":\"$APPROLE_ID\",\"secret_id\":\"$SECRET_ID\"}" https://vault.local.xenit.eu:8200/v1/auth/approle/login | jq -r .auth.client_token) && \
        ARTIFACTORY_LOGIN=$(curl -k -H "X-Vault-Token: $token" -X GET https://vault.local.xenit.eu:8200/v1/secret/Applications/artifactory.xenit.eu/readall | jq -r '"\(.data.username):\(.data.password)"') && \
	curl -o /tmp/solr.zip https://${ARTIFACTORY_LOGIN}@artifactory.xenit.eu/artifactory/simple/alfresco-enterprise-cache/org/alfresco/alfresco-solr4-distribution/${SOLR_VERSION}/alfresco-solr4-distribution-${SOLR_VERSION}.zip && \
	mkdir -p /opt/alfresco/solr4 && \
	unzip /tmp/solr.zip -d /opt/alfresco/solr4/ && \
	mkdir -p ${CATALINA_HOME}/conf/Catalina/localhost && \
	mv /opt/alfresco/solr4/context.xml ${CATALINA_HOME}/conf/Catalina/localhost/solr4.xml && \
	sed -i 's/shared.loader=/shared.loader=${catalina.base}\/shared\/classes,${catalina.base}\/shared\/lib\/*.jar/' ${CATALINA_HOME}/conf/catalina.properties && \
 	mv /opt/alfresco/solr4/*.war ${CATALINA_HOME}/webapps/ && \

    # Configure server.xml
    xmlstarlet edit --inplace \
        --var server "/Server/@port" \
            --update '$server' --value \$\{TOMCAT_SERVER_PORT\} \
        --delete "/Server/Listener[@className='org.apache.catalina.core.JasperListener']" \
        --delete "/Server/Listener[@className='org.apache.catalina.core.JreMemoryLeakPreventionListener']" \
        --delete "/Server/Listener[@className='org.apache.catalina.core.ThreadLocalLeakPreventionListener']" \
        --var connector "/Server/Service[@name='Catalina']/Connector[@protocol=\"HTTP/1.1\"]/@port" \
            --update '$connector' --value \$\{TOMCAT_PORT\} \
            --insert '$connector' --type attr --name URIEncoding --value UTF-8 \
            --insert '$connector' --type attr --name maxThreads --value \$\{TOMCAT_MAX_THREADS\} \	    
            --insert '$connector' --type attr --name maxHttpHeaderSize --value \$\{TOMCAT_MAX_HTTP_HEADER_SIZE\} \
        --var connector "/Server/Service[@name='Catalina']/Connector[@protocol=\"HTTP/1.1\"]/@redirectPort" \
            --update '$connector' --value \$\{TOMCAT_PORT_SSL\} \
	    --var connector "/Server/Service[@name='Catalina']/Connector[@protocol=\"AJP/1.3\"]/@port" \
            --update '$connector' --value \$\{TOMCAT_AJP_PORT\} \
            --insert '$connector' --type attr --name URIEncoding --value UTF-8 \
        --var connector "/Server/Service[@name='Catalina']/Connector[@protocol=\"AJP/1.3\"]/@redirectPort" \
            --update '$connector' --value \$\{TOMCAT_PORT_SSL\} \
        --var connector "/Server/Service[@name='Catalina']/Connector[@protocol=\"AJP/1.3\"]" \
        --append '$connector' --type elem --name Connector \
            --var connector '$prev' \
            --insert '$connector' --type attr --name port --value \$\{TOMCAT_PORT_SSL\} \
            --insert '$connector' --type attr --name URIEncoding --value UTF-8 \
            --insert '$connector' --type attr --name protocol --value org.apache.coyote.http11.Http11Protocol \
            --insert '$connector' --type attr --name SSLEnabled --value true \
            --insert '$connector' --type attr --name maxThreads --value \$\{TOMCAT_MAX_THREADS\} \
            --insert '$connector' --type attr --name scheme --value https \
            --insert '$connector' --type attr --name keystoreFile --value /opt/alfresco/keystore/ssl.keystore \
            --insert '$connector' --type attr --name keystorePass --value kT9X6oe68t  \
            --insert '$connector' --type attr --name keystoreType --value JCEKS \
            --insert '$connector' --type attr --name secure --value true \
            --insert '$connector' --type attr --name connectionTimeout --value 240000 \
            --insert '$connector' --type attr --name truststoreFile --value /opt/alfresco/keystore/ssl.truststore \
            --insert '$connector' --type attr --name truststorePass --value kT9X6oe68t \
            --insert '$connector' --type attr --name truststoreType --value JCEKS \
            --insert '$connector' --type attr --name clientAuth --value want \
            --insert '$connector' --type attr --name sslProtocol --value TLS \
            --insert '$connector' --type attr --name allowUnsafeLegacyRenegotiation --value true \
            --insert '$connector' --type attr --name maxHttpHeaderSize --value \$\{TOMCAT_MAX_HTTP_HEADER_SIZE\} \
            --insert '$connector' --type attr --name maxSavePostSize --value -1 \
        ${CATALINA_HOME}/conf/server.xml && \

    xmlstarlet edit --inplace \
        --subnode "/tomcat-users" --type elem --name user \
            --var user '$prev' \
            --insert '$user' --type attr --name username --value "CN=Alfresco Repository Client, OU=Unknown, O=Alfresco Software Ltd., L=Maidenhead, ST=UK, C=GB" \
            --insert '$user' --type attr --name roles --value "repoclient" \
            --insert '$user' --type attr --name password --value "null" \
        --append '$user' --type elem --name user \
            --var user '$prev' \
            --insert '$user' --type attr --name username --value "CN=Alfresco Repository, OU=Unknown, O=Alfresco Software Ltd., L=Maidenhead, ST=UK, C=GB" \
            --insert '$user' --type attr --name roles --value "repository" \
            --insert '$user' --type attr --name password --value "null" \
        ${CATALINA_HOME}/conf/tomcat-users.xml && \

# clean up
  	apt-get --purge -y remove unzip xmlstarlet && \
        apt-get --purge -y autoremove && \
        rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* &&\
 	ls -lha ${CATALINA_HOME}/webapps/ && \
	sed -i "s#@@ALFRESCO_SOLR4_DIR@@#/opt/alfresco/solr4#" ${CATALINA_HOME}/conf/Catalina/localhost/solr4.xml && \
	sed -i "s#@@ALFRESCO_SOLR4_MODEL_DIR@@#/opt/alfresco/alf_data/solr4/model#" ${CATALINA_HOME}/conf/Catalina/localhost/solr4.xml && \
	sed -i "s#@@ALFRESCO_SOLR4_CONTENT_DIR@@#/opt/alfresco/alf_data/solr4/content#" ${CATALINA_HOME}/conf/Catalina/localhost/solr4.xml && \
 	sed -i "s#^\(data.dir.root\s*=\s*\).*\$#\1/opt/alfresco/alf_data/solr4/index#" /opt/alfresco/solr4/workspace-SpacesStore/conf/solrcore.properties && \
 	sed -i "s#^\(data.dir.root\s*=\s*\).*\$#\1/opt/alfresco/alf_data/solr4/index#" /opt/alfresco/solr4/archive-SpacesStore/conf/solrcore.properties && \
 	cat ${CATALINA_HOME}/conf/Catalina/localhost/solr4.xml && \
    	set -x && \
	apt-get update && apt-get install -y --no-install-recommends ca-certificates wget && rm -rf /var/lib/apt/lists/* && \
        dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')" && \
        wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch" && \
        wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc" && \
        export GNUPGHOME="$(mktemp -d)" && \
        gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 && \
        gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu && \
        rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc && \
        chmod +x /usr/local/bin/gosu && \
        gosu nobody true && \
        apt-get purge -y --auto-remove ca-certificates wget && \
	cat /etc/passwd && \
 	chown -hR tomcat /opt/alfresco && \
	mkdir -p /opt/alfresco/alf_data

COPY 	init.sh /opt/alfresco/

# add the keystore
ADD keystore /opt/alfresco/keystore

VOLUME ${CATALINA_HOME}/temp ${CATALINA_HOME}/logs

WORKDIR /opt/alfresco

HEALTHCHECK --interval=10s --timeout=3s --retries=3 --start-period=20s CMD curl -f http://localhost:8080/solr4 || exit 1

ENTRYPOINT ["/opt/alfresco/init.sh"]
CMD 	["app:start"]
